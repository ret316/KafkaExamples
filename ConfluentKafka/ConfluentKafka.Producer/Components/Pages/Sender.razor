@page "/sender"
@using ConsluentKafka.Shared
@rendermode InteractiveServer
@inject ILogger<Sender> logger;

<PageTitle>Sender</PageTitle>


<p>This component demonstrates showing data.</p>

<div class="input-group w-50 p-3">
    <input type="text" aria-label="Message" class="form-control" @bind-value=_message />
    <button type="button" class="btn btn-primary" @onclick="SendMessage">Send</button>
</div>

@code {
    private string? _id;
    private string? _message;

    protected override Task OnInitializedAsync()
    {
        _id = Guid.NewGuid().ToString();
        return base.OnInitializedAsync();
    }

    public async Task SendMessage()
    {
        logger.LogInformation("sending");

        var producer = new ConfluentProducer();
        var message = new ConfluentMessage { Message = _message! };

        await producer.ProduceAsync(message.Message!);

        logger.LogInformation("Message with text = {1} sended", message.Message);
    }
}
